name: build-publish

on:
  workflow_dispatch:
  push:
    branches:
      - prod

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
            - platform: "macos-latest" # for Arm based macs (M1 and above).
              args: "--target aarch64-apple-darwin"
            - platform: "macos-latest" # for Intel based macs.
              args: "--target x86_64-apple-darwin"
            - platform: "ubuntu-24.04" # for Tauri v1 you could replace this with ubuntu-20.04.
              args: "--target x86_64-unknown-linux-gnu"
            # - platform: "ubuntu-24.04"
            #   args: "--target aarch64-unknown-linux-gnu"
            - platform: "windows-latest"
              args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04' # This must match the platform value defined above.
        run: |
            sudo apt-get update
            sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libudev-dev
                rustup target add aarch64-unknown-linux-gnu
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.

      - name: install frontend dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: RMK-GUI v__VERSION__
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}